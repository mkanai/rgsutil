% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_gsfile.R
\name{write_gsfile}
\alias{write_gsfile}
\title{Write a data frame to Google Cloud Storage}
\usage{
write_gsfile(
  x,
  remote_path,
  sep = "\\t",
  overwrite = FALSE,
  cache.dir = NULL,
  ...
)
}
\arguments{
\item{x}{A data.frame or data.table to write.}

\item{remote_path}{Character string. The destination Google Cloud Storage path
starting with "gs://".}

\item{sep}{Character string. Field separator for the output file.
Defaults to "\\t" (tab).}

\item{overwrite}{Logical. Whether to overwrite an existing remote file.
Defaults to FALSE for safety.}

\item{cache.dir}{Character string. Directory for temporary local files.
Defaults to getOption("rgsutil.cache_dir") or a temp directory.}

\item{...}{Additional arguments passed to \code{\link[data.table]{fwrite}}.}
}
\value{
NULL (invisibly). The function is called for its side effect of
  uploading a file to Google Cloud Storage.
}
\description{
Writes a data frame to Google Cloud Storage by first writing to a temporary
local file and then uploading it. Supports overwrite protection and various
file formats.
}
\details{
The function performs the following steps:
\enumerate{
  \item Checks if the remote file exists (unless overwrite = TRUE)
  \item Writes the data to a temporary local file
  \item Uploads the file to Google Cloud Storage
  \item Removes the temporary local file
}
}
\examples{
\dontrun{
# Write a data frame to Google Cloud Storage
df <- data.frame(x = 1:10, y = letters[1:10])
write_gsfile(df, "gs://my-bucket/data/output.tsv")

# Write as CSV with overwrite
write_gsfile(df, "gs://my-bucket/data/output.csv",
  sep = ",", overwrite = TRUE
)

# Write with compression
write_gsfile(df, "gs://my-bucket/data/output.tsv.gz",
  compress = "gzip"
)
}

}
\seealso{
\code{\link{read_gsfile}}, \code{\link{upload_gsfile}},
  \code{\link{gsfile_exists}}
}
